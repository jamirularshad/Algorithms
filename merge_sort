// Online C compiler to run C program online
#include <stdio.h>

void merge_sort( int a[] , int length); 
void merge_sort_recursion( int a[], int l , int r ); // recursive step of the algorithm where it continually divides the unsorted array into smaller and smaller portions 
void merge_sorted_arrays(int a[], int l , int m, int r); 



int main() 
{ 
    
    int array[] = {9,4,8,1,7,0,3,2,5,6};  
    int length = 10; 
    
    merge_sort(array, length); // mergesort sorts the array 
    
    for(int i=0 ; i < length ; i++)
        printf("%d", array[i]); 
        
    printf("\n"); 
    
    
    
    return 0;
}

void merge_sort (int a[] , int length )
{ 
    merge_sort_recursion (a , 0 , length -1 ); // 0 and length -1 are initially the indexes that bounds the portion of the array that we are looking at which is essentially all the array 
} 

void merge_sort_recursion ( int a[] , int l , int r) // l is the left index of the portion of the array , int r is defining the rightmost index of the array  
{ 
    
    if ( l<r) 
    { 
        
        int m = l + (r-l)/2 ;  // establish the middle 
        merge_sort_recursion( a , l , m) ; // LEFT PORTION (after divided)
        // call this for the smaller portions of the array from the left portion to the middle and then from the middle to the righmost index 
        merge_sort_recursion(a ,  m + 1, r); // Right portion 
        
        merge_sorted_arrays(a, l , m , r); 
        
    } 
    
}


void merge_sorted_arrays(int a[], int l , int m, int r); 
    
    
    
    
    



